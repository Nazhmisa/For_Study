// Массивы
package main

import (
	"fmt"
)

func changeSlice(s []int) {
	s[0] = 1000
}

// Массивы в Go представляют собой фиксированные по размеру последовательности элементов одного типа.
// Они позволяют хранить несколько значений в одной переменной.
// Массивы объявляются с указанием типа элементов и размера массива.
// Объявление массива
func main() {
	// Массивы из 5 строк
	var films [5]string
	// Инициализация массива
	films[0] = "Властелин колец"
	films[1] = "Гарри Поттер"
	films[2] = "Звездные войны"
	films[3] = "Матрица"
	films[4] = "Начало"
	// Вывод элементов массива
	for i := 0; i < len(films); i++ {
		fmt.Println(films[i])
	}

	// Замена элемента массива
	films[2] = "Звездные войны: Пробуждение силы"
	for i := 0; i < len(films); i++ {
		fmt.Println(films[i])
	}

	// Практика. Массивы
	// Задание 1
	// Создай массив из 3 чисел типа int, задай значения 10, 20, 30.
	// Выведи каждый элемент на экран.
	nums := [3]int{10, 20, 30}
	fmt.Println("Массив чисел:", nums[0], nums[1], nums[2])
	// Задание 2
	// Создай массив из 5 строк, заполни его названиями своих любимых фильмов.
	// Выведи все фильмы на экран с помощью цикла for.
	favoriteFilms := [5]string{"Властелин колец", "Гарри Поттер", "Звездные войны", "Матрица", "Начало"}
	for i := 0; i < len(favoriteFilms); i++ {
		fmt.Println("Любимый фильм:", favoriteFilms[i])
	}
	// Задание 3
	// Создай массив из 4 чисел, поменяй местами первый и последний элемент.
	// Выведи изменённый массив.
	numbers := [4]int{1, 2, 3, 4}
	numbers[0], numbers[3] = numbers[3], numbers[0]
	fmt.Println("Изменённый массив чисел:", numbers[0], numbers[1], numbers[2], numbers[3])
	// Практика. Срезы
	// Задание 4
	// Создай срез из 3 строк — названия своих любимых игр.
	// Добавь ещё одну игру с помощью append().
	// Выведи все игры через цикл range.
	games := []string{"The Witcher 3", "Cyberpunk 2077", "Dark Souls"}
	games = append(games, "Hollow Knight")
	for i, game := range games {
		fmt.Printf("Любимая игра %d: %s\n", i+1, game)
	}
	// Задание 5
	// Создай пустой срез с помощью make() размером 4.
	// Заполни его числами 5, 10, 15, 20.
	// Выведи длину и ёмкость среза.
	slice := make([]int, 4)
	slice[0] = 5
	slice[1] = 10
	slice[2] = 15
	slice[3] = 20
	fmt.Println("Длина среза:", len(slice))
	fmt.Println("Ёмкость среза:", cap(slice))
	// Задание 6
	// Напиши функцию changeSlice(), которая принимает срез чисел и заменяет первый элемент на 1000.
	// В main() создай срез из 3 чисел, вызови эту функцию и выведи изменённый срез.
	sliceToChange := []int{1, 2, 3}
	changeSlice(sliceToChange)
	fmt.Println("Изменённый срез:", sliceToChange)
	// Задание 7
	//Создай срез из чисел от 1 до 10.
	// Сформируй новый срез из только чётных чисел.
	// Выведи его.
	evenNumbers := []int{}
	for i := 1; i <= 10; i++ {
		if i%2 == 0 {
			evenNumbers = append(evenNumbers, i)
		}
	}
	fmt.Println("Чётные числа от 1 до 10:", evenNumbers)
	// Задание 8
	// Что будет выведено на экран в этом коде?
	// Объявление массива и среза
	arr := [4]int{1, 2, 3, 4}
	slice1 := arr[1:3]
	slice1[0] = 100
	fmt.Println(arr)
	fmt.Println(slice1)
	// Ответ: будет выведено [1 100 3 4] и [100 3]
}
